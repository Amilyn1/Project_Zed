Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10K
ii. Business table = 10K
iii. Category table = 10K
iv. Checkin table = 10K
v. elite_years table = 10K
vi. friend table = 10K 
vii. hours table = 10K
viii. photo table = 10K
ix. review table = 10K 
x. tip table = 10K 
xi. user table = 10K
	

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10K
ii. Hours = business_id: 1562
iii. Category = business_id: 2643
iv. Attribute = business_id: 1115
v. Review =  10K
vi. Checkin = business_id: 493
vii. Photo = id: 10K, business_id: 8090
viii. Tip = business_id: 3979
ix. User = 10K
x. Friend = user_id = 11
xi. Elite_years = user_id: 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:

## First using OR to see if there are zero NULL values

SELECT *
FROM User
WHERE id IS NULL OR 
    name IS NULL OR 
    review_count IS NULL OR 
    yelping_since IS NULL OR 
    useful IS NULL OR 
    funny IS NULL OR 
    cool IS NULL OR 
    fans IS NULL OR 
    average_stars IS NULL OR 
    compliment_hot IS NULL OR 
    compliment_more IS NULL OR 
    compliment_profile IS NULL OR 
    compliment_cute IS NULL OR 
    compliment_list IS NULL OR 
    compliment_note IS NULL OR 
    compliment_plain IS NULL OR 
    compliment_cool IS NULL OR 
    compliment_funny IS NULL OR 
    compliment_writer IS NULL OR 
    compliment_photos IS NULL

## Search returns no rows. Concluding there are no NULL values.
	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		Min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		Min: 1		max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		Min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		Min: 1		max: 53	avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		Min: 0		max: 2000	avg: 24.2995
		

5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

SELECT SUM(review_count) AS Number_of_Reviews, City
FROM Business
GROUP BY City
ORDER BY Number_of_Reviews Desc
	
Copy and Paste the Result Below:

+-------------------+-----------------+
| Number_of_Reviews | city            |
+-------------------+-----------------+
|             82854 | Las Vegas       |
|             34503 | Phoenix         |
|             24113 | Toronto         |
|             20614 | Scottsdale      |
|             12523 | Charlotte       |
|             10871 | Henderson       |
|             10504 | Tempe           |
|              9798 | Pittsburgh      |
|              9448 | Montréal        |
|              8112 | Chandler        |
|              6875 | Mesa            |
|              6380 | Gilbert         |
|              5593 | Cleveland       |
|              5265 | Madison         |
|              4406 | Glendale        |
|              3814 | Mississauga     |
|              2792 | Edinburgh       |
|              2624 | Peoria          |
|              2438 | North Las Vegas |
|              2352 | Markham         |
|              2029 | Champaign       |
|              1849 | Stuttgart       |
|              1520 | Surprise        |
|              1465 | Lakewood        |
|              1155 | Goodyear        |
+-------------------+-----------------+
(Output limit exceeded, 25 of 362 total rows shown)
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT Stars, Count(Stars) AS star_count
FROM Business
WHERE City = 'Avon'
GROUP BY Stars


Copy and Paste the Resulting Table Below (2 columns: star rating and count):

+-------+------------+
| stars | star_count |
+-------+------------+
|   1.5 |          1 |
|   2.5 |          2 |
|   3.5 |          3 |
|   4.0 |          2 |
|   4.5 |          1 |
|   5.0 |          1 |
+-------+------------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT Stars, Count(Stars) AS star_count
FROM Business
WHERE City = 'Beachwood'
GROUP BY Stars

Copy and Paste the Resulting Table Below (2 columns: star rating and count):

+-------+------------+
| stars | star_count |
+-------+------------+
|   2.0 |          1 |
|   2.5 |          1 |
|   3.0 |          2 |
|   3.5 |          2 |
|   4.0 |          1 |
|   4.5 |          2 |
|   5.0 |          5 |
+-------+------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

SELECT Name, Sum(review_count) AS Total_Reviews
FROM User
GROUP BY Name
ORDER BY Total_Reviews Desc
Limit 3
		
	

Copy and Paste the Result Below:
+--------+---------------+
| name   | Total_Reviews |
+--------+---------------+
| Nicole |          2397 |
| Sara   |          2253 |
| Gerald |          2034 |
+--------+---------------+		

8. Does posting more reviews correlate with more fans?
Yes, there does seem to be a positive correlation between review count and fans. 

	Please explain your findings and interpretation of the results:

/* First I took a look at review counts and fans to get a sample picture of some of the data.*/ 

SELECT Name, review_count,fans 
FROM User
ORDER BY review_count DESC
+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
| Ed        |          904 |   38 |
| Nicole    |          864 |   43 |
| Fran      |          862 |  124 |
| Mark      |          861 |  115 |
| Christina |          842 |   85 |
| Dominic   |          836 |   37 |
| Lissa     |          834 |  120 |
| Lisa      |          813 |  159 |
| Alison    |          775 |   61 |
| Sui       |          754 |   78 |
| Tim       |          702 |   35 |
| L         |          696 |   10 |
| Angela    |          694 |  101 |
| Crissy    |          676 |   25 |
| Lyn       |          675 |   45 |
+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)

## Then I reversed the order, by review count

SELECT Name, review_count,fans 
FROM User
ORDER BY review_count ASC

+---------------+--------------+------+
| name          | review_count | fans |
+---------------+--------------+------+
| Sonnenschein1 |            0 |    0 |
| svenher       |            0 |    0 |
| Schweinefe    |            0 |    0 |
| Luke          |            0 |    0 |
| Limon-Du      |            0 |    0 |
| ab            |            0 |    0 |
| torstenbec    |            0 |    0 |
| snek          |            0 |    0 |
|               |            0 |    0 |
| Joe           |            1 |    0 |
| Lyndsey       |            1 |    0 |
| Qi            |            1 |    0 |
| Sachin        |            1 |    0 |
| Mary          |            1 |    0 |
| Gwen          |            1 |    0 |
| Kimmie        |            1 |    0 |
| Rosa Maria    |            1 |    0 |
| Carl          |            1 |    0 |
| Michael       |            1 |    0 |
| Tony          |            1 |    0 |
| Regina        |            1 |    0 |
| A             |            1 |    0 |
| Sa            |            1 |    0 |
| Mishelle      |            1 |    0 |
| Rachel        |            1 |    0 |
+---------------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)

/*That already creates a pretty convincing argument for a relationship between the variables, but to make sure I wasn’t looking at outliers, I calculated the averages…*/

SELECT AVG(review_count), AVG(fans), 
        MIN(review_count),MIN(fans),
        MAX(review_count), MAX(fans)
FROM User

## Average review count: 24.2995, Average fans: 1.4896

/* Then I ran a couple other queries for different review_counts.*/
 
SELECT Name, review_count,fans 
FROM User
WHERE review_count BETWEEN 20 AND 30
ORDER BY review_count desc
 
SELECT Name, review_count,fans 
FROM User
WHERE review_count BETWEEN 50 AND 60
ORDER BY review_count ASC
 
/* The relationship is more obvious at higher review counts, but it is there. To dive deeper I would use a correlation function on software that supports it or take a look at a visualization in Tableau.*/
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: Love

	SQL code used to arrive at answer:
 
SELECT Count(text)AS “Love”
FROM review
WHERE text like "%love%" 

SELECT  Count(text) AS "Hate"
FROM review
WHERE text like "%hate%" 

## The results were Love 1780, Hate 232. Love wins by a landslide.
	
10. Find the top 10 users with the most fans:

SQL code used to arrive at answer:

SELECT name, fans 
FROM User
ORDER BY fans DESC
Limit 10
	

Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
		
Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

Yes, the Phoenix restaurants in the lower star rating group have longer hours, probably because they are more likely to be fast food chain restaurants. 

ii. Do the two groups you chose to analyze have a different number of reviews?

Yes, higher star value correlates with a higher number of reviews.      
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

Not really. I pulled latitude, longitude and postal code data, but there aren’t any remarkable trends. Note: The sample size is small. 

SQL code used for analysis:
 
SELECT  c.category, 
        b.city, 
        b.name,  
        h.hours,
        b.postal_code,
        b.latitude,
        b.longitude,
        b.review_count,
        CASE
                WHEN B.stars BETWEEN 2 AND 3.99 THEN '2-3 stars'
                WHEN B.stars BETWEEN 4 AND 5 THEN '4-5 stars'
        END AS star_rating
FROM ((Business b JOIN hours h ON b.ID = h.business_ID)
        JOIN category c ON b.ID = c.business_ID)
WHERE b.City = 'Phoenix' AND c.Category = 'Restaurants'
GROUP BY star_rating
ORDER BY star_rating		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:

Businesses that are closed have more than 7x fewer reviews than the ones that are open.   
         
ii. Difference 2:

The average star values for open and closed businesses are very similar (i.e., being closed doesn’t seem to hurt the business’s prior reputation).         
         
SQL code used for analysis:

SELECT is_open, AVG(stars), SUM(review_count)
FROM business
Group by is_open

+---------+---------------+-------------------+
| is_open |    AVG(stars) | SUM(review_count) |
+---------+---------------+-------------------+
|       0 | 3.52039473684 |             35261 |
|       1 | 3.67900943396 |            269300 |
+---------+---------------+-------------------+
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

How do images affect a business’s Yelp presence and popularity? Do businesses with more photos receive higher star ratings?     
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data: 

Query about the relationship between businesses with photos and their star ratings. Make sure to account for businesses with no photos. To do this you might average the star rating for all distinct businesses and compare that to the average star rating for businesses with photos. You’ll need the Business and the Photo tables. Also consider the relationship between the number of reviews and photos and how labels and captions relate to star ratings.                         
                  
iii. Output of your finished dataset:

+--------------------+------------+-------------------+
| COUNT(Distinct ID) | AVG(stars) | AVG(review_count) |
+--------------------+------------+-------------------+
|              10000 |     3.6549 |           30.4561 |
+--------------------+------------+-------------------+
+------------------+-----------------+------------------+
| business_w_photo | avg_stars_photo | avg_review_photo |
+------------------+-----------------+------------------+
|             6493 |   3.73655913978 |    361.807987711 |
+------------------+-----------------+------------------+

Conclusions:  The average star rating is only slightly higher for businesses with photos; however, having at least one photo attached to a business correlates with far more reviews. (It may be that having many reviews makes it more likely that photos will be posted).      

It doesn’t appear that the number of photos posted or whether or not they have captions has a significant effect on star ratings.   
         
iv. Provide the SQL code you used to create your final dataset:

/*First, let’s get a sample view of some photo data to see how it relates to a business’s star rating and review count*/

SELECT  b.stars,
    b.review_count,
    count(p.id) AS photo_count,
    SUBSTR(caption,1,3) AS caption_partial,
    label
FROM (Photo p JOIN Business b ON b.ID = p.business_ID)
GROUP BY b.name
ORDER BY photo_count DESC 
 
## Then, we run our calculations on businesses with and without photos 

SELECT COUNT(Distinct ID), 
AVG(stars), 
AVG(review_count)
FROM Business
 
+--------------------+------------+-------------------+
| COUNT(Distinct ID) | AVG(stars) | AVG(review_count) |
+--------------------+------------+-------------------+
|              10000 |     3.6549 |           30.4561 |
+--------------------+------------+-------------------+

SELECT  COUNT(DISTINCT business_ID) AS business_w_photo,
     AVG(b.stars) AS avg_stars_photo, 
     AVG(b.review_count) AS avg_review_photo
FROM Photo p JOIN Business b ON b.ID = p.business_ID

+------------------+-----------------+------------------+
| business_w_photo | avg_stars_photo | avg_review_photo |
+------------------+-----------------+------------------+
|             6493 |   3.73655913978 |    361.807987711 |
+------------------+-----------------+------------------+

